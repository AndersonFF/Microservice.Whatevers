// <auto-generated />
using System;
using Microservice.Whatevers.Repositories.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Microservice.Whatevers.Repositories.Migrations
{
    [DbContext(typeof(WhateverContext))]
    [Migration("20200418025304_First  migration")]
    partial class Firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Microservice.Whatevers.Domain.Entities.Things.Thing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.Property<Guid>("WhateverId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WhateverId");

                    b.ToTable("Thing");
                });

            modelBuilder.Entity("Microservice.Whatevers.Domain.Entities.Whatevers.Whatever", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Whatever");

                    b.HasData(
                        new
                        {
                            Id = new Guid("059afab1-e03f-4154-8f59-a201ac6b6f72"),
                            Name = "Whatever",
                            Time = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "Some type"
                        },
                        new
                        {
                            Id = new Guid("7480dbeb-913f-4239-bddd-3453dc9ed3bf"),
                            Name = "Whatever",
                            Time = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            Type = "Another type"
                        },
                        new
                        {
                            Id = new Guid("9aeb431d-7c1f-4c7e-a689-8ce6db155f71"),
                            Name = "Whatever",
                            Time = new DateTime(2020, 4, 17, 23, 53, 3, 808, DateTimeKind.Local).AddTicks(168),
                            Type = "More another type"
                        },
                        new
                        {
                            Id = new Guid("5da530d9-15d3-4ed0-90d8-280658342e44"),
                            Name = "Whatever",
                            Time = new DateTime(2020, 4, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            Type = "Once more another type"
                        });
                });

            modelBuilder.Entity("Microservice.Whatevers.Domain.Entities.Things.Thing", b =>
                {
                    b.HasOne("Microservice.Whatevers.Domain.Entities.Whatevers.Whatever", "Whatever")
                        .WithMany("Things")
                        .HasForeignKey("WhateverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
